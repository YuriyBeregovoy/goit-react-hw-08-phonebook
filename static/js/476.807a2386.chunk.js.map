{"version":3,"file":"static/js/476.807a2386.chunk.js","mappings":"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","sources":["components/AllForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled..js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FormStyles = styled.form`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nmin-width: 260px;\nmargin-bottom: 20px;\n`;\n\nexport const LabelStyles = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\nmargin-bottom: 10px;\nfont-weight: 500;\nfont-size: 14px;\n  line-height: 1.2;\n`;\n\nexport const FormButtonStyles = styled.button`\n\n    display: block;\n    max-width: 169px;\n    align-self: center;\n    padding: 5px 10px;\n    font-family: inherit;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.2;\n    text-align: center;\n    letter-spacing: 0.04em;\n    color: inherit;\n    border: 1px solid gray;\n    border-radius: 4px;\n    background-color: white;\n\n    &:hover, &:focus \n    {\n    color: #4d5ae5;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 2px 1px rgba(0, 0, 0, 0.08),\n    0px 2px 2px rgba(0, 0, 0, 0.12);}\n\n\n`;","import { useDispatch } from \"react-redux\";\nimport { addContacts} from \"redux/contacts/operations\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { FormButtonStyles, FormStyles, LabelStyles } from \"components/AllForm.styled\";\n\n\nexport const ContactForm = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts.items) || [];\n  \n   const handleNameSet = e => {\n    e.preventDefault();\n      const { name, number} = e.currentTarget.elements;\n     const newContact ={ name: name.value, number: number.value, };\n     \n\n  const isExistingContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n  if (!isExistingContact) {\n    dispatch(addContacts(newContact));\n  } else {\n    alert(`${newContact.name} is already in contacts!`);\n  }\n         e.currentTarget.reset();\n      }\n  \n\n  return  <FormStyles onSubmit={handleNameSet}>\n      <LabelStyles htmlFor={contacts.id}>\n          <span>Name</span>\n          <input\n        id = {nanoid()} \n        type=\"text\"\n        name=\"name\"\n          />\n        </LabelStyles>\n        <LabelStyles>\n          <span>Number</span>\n          <input\n        type=\"tel\"\n        name=\"number\"\n                />\n        </LabelStyles>\n       <FormButtonStyles type=\"submit\">Add contact</FormButtonStyles>\n      </FormStyles>\n}","import styled from \"styled-components\";\n\nexport const ItemButton = styled.button`\n\n    max-width: 169px;\n    padding: 5px 10px;\n    font-family: inherit;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.2;\n    text-align: center;\n    letter-spacing: 0.04em;\n    color: inherit;\n    border: 1px solid gray;\n    border-radius: 4px;\n    background-color: white;\n\n    &:hover, &:focus \n    {\n    color: #dbcd0b;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 2px 1px rgba(0, 0, 0, 0.08),\n    0px 2px 2px rgba(0, 0, 0, 0.12);}\n\n\n`;\n\nexport const Item = styled.li`\ndisplay: flex;\ngap: 20px;\njustify-content: space-between;\nalign-items: center;\n`;","import { Item, ItemButton } from \"./ContactListItem.styled.\"\n\nexport const ContactListItem = ({ contact:{id, name, number}, onContactDelete}) => {\n  return <Item key={id}>\n            <p>{name}: {number}</p>\n            <ItemButton type=\"button\" onClick={() => onContactDelete(id)}>Delete</ItemButton>\n          </Item> \n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nmin-width: 260px;\n\n`;","import { ContactListItem } from \"components/ContactListItem/ContactListItem\"\nimport { List } from \"./ContactList.styled\"\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"redux/contacts/operations\";\n\nexport const ContactList = () => {\nconst dispatch = useDispatch();\n\nconst filter = useSelector((state) => state.filter.filter);\n  const contacts = useSelector((state) => state.contacts.items);\n\n const handleContactDelete = (id) => {\n    dispatch(deleteContacts(id));\n  };\n  \n\n   const filteredContacts = Array.isArray(contacts) ? contacts.filter((contact) =>\n    typeof contact.name === \"string\" && contact.name.toLowerCase().includes(filter.toLowerCase())\n  ) : [];\n\n  return <List>\n    {filteredContacts.map(contact => (\n      <ContactListItem  key={contact.id} contact={contact} onContactDelete={handleContactDelete} />\n          ))}\n        </List>\n}","import styled from \"styled-components\";\n\nexport const LabelFilter = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\npadding-top: 10px;\npadding-bottom: 10px;\nmin-width: 260px;\n\n`;","import { LabelFilter } from \"./Filter.styled\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setNameFilter } from \"redux/contacts/filterSlice\";\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector((state) => state.filter.filter);\n\n  const onChangeInputFilter = (e) => {\n    const { value } = e.target;\n    dispatch(setNameFilter(value));\n  };\n\n\n  return <LabelFilter>\n          <span>Find contacts by name</span>\n          <input\n        type=\"text\"\n        value={filter} \n        onChange={onChangeInputFilter}\n          />\n        </LabelFilter>\n\n}","import { useSelector } from \"react-redux\";\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport {  useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { getIsLoading } from \"../redux/contacts/contactsSlice\";\nimport { useDispatch } from 'react-redux';\nimport { Container } from \"components/Container.styled\";\n\nexport  default function Contacts () {\n  const dispatch = useDispatch();\n   const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n    return (\n    <Container>\n      <h1>Contacts</h1>\n        <ContactForm />\n        {isLoading ? <b>Request in progress...</b> : null}\n      <h2>Contacts list</h2>\n        <Filter />\n        <ContactList/>\n    </Container>\n    );\n\n\n}\n  \n"],"names":["FormStyles","styled","_templateObject","_taggedTemplateLiteral","LabelStyles","_templateObject2","FormButtonStyles","_templateObject3","ContactForm","dispatch","useDispatch","contacts","useSelector","state","items","_jsxs","onSubmit","e","preventDefault","_e$currentTarget$elem","currentTarget","elements","name","number","newContact","value","find","contact","toLowerCase","alert","concat","addContacts","reset","children","htmlFor","id","_jsx","nanoid","type","ItemButton","Item","ContactListItem","_ref","_ref$contact","onContactDelete","onClick","List","ContactList","filter","handleContactDelete","deleteContacts","filteredContacts","Array","isArray","includes","map","LabelFilter","Filter","onChange","target","setNameFilter","Contacts","isLoading","getIsLoading","useEffect","fetchContacts","Container"],"sourceRoot":""}